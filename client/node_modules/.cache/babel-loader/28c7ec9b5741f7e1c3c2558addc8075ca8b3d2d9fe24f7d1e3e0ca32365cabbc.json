{"ast":null,"code":"// here we'll make the http request to our backend to get the product details and add it to the cart\nimport * as actionTypes from '../constants/cartConstants';\nimport axios from 'axios'; // will help us make our ajax requests\n\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\n  // async (dispatch) is the return value of the function addToCart\n  try {\n    // console.log(\"before fetching data\");\n    // console.log(\"id \"+id);\n    const {\n      data\n    } = await axios.get(`${process.env.BASE_URL}/api/products/${id}`);\n    // console.log(\"after fetching data\");\n\n    dispatch({\n      type: actionTypes.ADD_TO_CART,\n      payload: {\n        product: data._id,\n        name: data.name,\n        imageUrl: data.imageUrl,\n        price: data.price,\n        countInStock: data.countInStock,\n        qty\n      }\n    });\n    localStorage.setItem('cart', JSON.stringify(getState().cart.cartItems));\n  } catch (error) {\n    console.log('Error adding to cart:', error.message);\n  }\n};\nexport const addToServiceCart = (id, qty) => async (dispatch, getState) => {\n  // async (dispatch) is the return value of the function addToCart\n  try {\n    // console.log(\"before fetching data\");\n    // console.log(\"id \"+id);\n    const {\n      data\n    } = await axios.get(`/api/services/${id}`);\n    // console.log(\"after fetching data\");\n\n    dispatch({\n      type: actionTypes.ADD_TO_SERVICE_CART,\n      payload: {\n        service: data._id,\n        name: data.name,\n        imageUrl: data.imageUrl,\n        price: data.price,\n        countInStock: data.countInStock,\n        qty\n      }\n    });\n    localStorage.setItem('cart', JSON.stringify(getState().cart.cartItems));\n  } catch (error) {\n    console.log('Error adding to cart:', error.message);\n  }\n};\nexport const removeFromCart = id => (dispatch, getState) => {\n  try {\n    dispatch({\n      type: actionTypes.REMOVE_FROM_CART,\n      payload: id\n    });\n    localStorage.setItem('cart', JSON.stringify(getState().cart.cartItems));\n  } catch (error) {\n    console.log('Error removing from cart:', error);\n  }\n};","map":{"version":3,"names":["actionTypes","axios","addToCart","id","qty","dispatch","getState","data","get","process","env","BASE_URL","type","ADD_TO_CART","payload","product","_id","name","imageUrl","price","countInStock","localStorage","setItem","JSON","stringify","cart","cartItems","error","console","log","message","addToServiceCart","ADD_TO_SERVICE_CART","service","removeFromCart","REMOVE_FROM_CART"],"sources":["E:/Myweb/Digital_invoice/client/src/redux/actions/cartActions.js"],"sourcesContent":["// here we'll make the http request to our backend to get the product details and add it to the cart\r\nimport * as actionTypes from '../constants/cartConstants';\r\nimport axios from 'axios'; // will help us make our ajax requests\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n    // async (dispatch) is the return value of the function addToCart\r\n    try {\r\n        // console.log(\"before fetching data\");\r\n        // console.log(\"id \"+id);\r\n        const {data} = await axios.get(`${process.env.BASE_URL}/api/products/${id}`);\r\n        // console.log(\"after fetching data\");\r\n\r\n    dispatch({\r\n        type: actionTypes.ADD_TO_CART,\r\n        payload:{\r\n            product: data._id,\r\n            name: data.name,\r\n            imageUrl: data.imageUrl,\r\n            price:data.price,\r\n            countInStock: data.countInStock,\r\n            qty,\r\n        },\r\n    });\r\n\r\n    localStorage.setItem('cart', JSON.stringify(getState().cart.cartItems));\r\n    } catch (error) {\r\n        console.log('Error adding to cart:', error.message);\r\n    }\r\n}\r\n\r\nexport const addToServiceCart = (id, qty) => async (dispatch, getState) => {\r\n    // async (dispatch) is the return value of the function addToCart\r\n    try {\r\n        // console.log(\"before fetching data\");\r\n        // console.log(\"id \"+id);\r\n        const {data} = await axios.get(`/api/services/${id}`);\r\n        // console.log(\"after fetching data\");\r\n\r\n    dispatch({\r\n        type: actionTypes.ADD_TO_SERVICE_CART,\r\n        payload:{\r\n            service: data._id,\r\n            name: data.name,\r\n            imageUrl: data.imageUrl,\r\n            price:data.price,\r\n            countInStock: data.countInStock,\r\n            qty,\r\n        },\r\n    });\r\n\r\n    localStorage.setItem('cart', JSON.stringify(getState().cart.cartItems));\r\n    } catch (error) {\r\n        console.log('Error adding to cart:', error.message);\r\n    }\r\n}\r\n\r\nexport const removeFromCart = (id) => (dispatch,getState) =>{\r\n    try {\r\n        dispatch({\r\n            type: actionTypes.REMOVE_FROM_CART,\r\n            payload: id\r\n        });\r\n    \r\n        localStorage.setItem('cart',JSON.stringify(getState().cart.cartItems));\r\n    } catch (error) {\r\n        console.log('Error removing from cart:', error);\r\n    }\r\n    \r\n}"],"mappings":"AAAA;AACA,OAAO,KAAKA,WAAW,MAAM,4BAA4B;AACzD,OAAOC,KAAK,MAAM,OAAO,CAAC,CAAC;;AAE3B,OAAO,MAAMC,SAAS,GAAGA,CAACC,EAAE,EAAEC,GAAG,KAAK,OAAOC,QAAQ,EAAEC,QAAQ,KAAK;EAChE;EACA,IAAI;IACA;IACA;IACA,MAAM;MAACC;IAAI,CAAC,GAAG,MAAMN,KAAK,CAACO,GAAG,CAAE,GAAEC,OAAO,CAACC,GAAG,CAACC,QAAS,iBAAgBR,EAAG,EAAC,CAAC;IAC5E;;IAEJE,QAAQ,CAAC;MACLO,IAAI,EAAEZ,WAAW,CAACa,WAAW;MAC7BC,OAAO,EAAC;QACJC,OAAO,EAAER,IAAI,CAACS,GAAG;QACjBC,IAAI,EAAEV,IAAI,CAACU,IAAI;QACfC,QAAQ,EAAEX,IAAI,CAACW,QAAQ;QACvBC,KAAK,EAACZ,IAAI,CAACY,KAAK;QAChBC,YAAY,EAAEb,IAAI,CAACa,YAAY;QAC/BhB;MACJ;IACJ,CAAC,CAAC;IAEFiB,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAAClB,QAAQ,CAAC,CAAC,CAACmB,IAAI,CAACC,SAAS,CAAC,CAAC;EACvE,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEF,KAAK,CAACG,OAAO,CAAC;EACvD;AACJ,CAAC;AAED,OAAO,MAAMC,gBAAgB,GAAGA,CAAC5B,EAAE,EAAEC,GAAG,KAAK,OAAOC,QAAQ,EAAEC,QAAQ,KAAK;EACvE;EACA,IAAI;IACA;IACA;IACA,MAAM;MAACC;IAAI,CAAC,GAAG,MAAMN,KAAK,CAACO,GAAG,CAAE,iBAAgBL,EAAG,EAAC,CAAC;IACrD;;IAEJE,QAAQ,CAAC;MACLO,IAAI,EAAEZ,WAAW,CAACgC,mBAAmB;MACrClB,OAAO,EAAC;QACJmB,OAAO,EAAE1B,IAAI,CAACS,GAAG;QACjBC,IAAI,EAAEV,IAAI,CAACU,IAAI;QACfC,QAAQ,EAAEX,IAAI,CAACW,QAAQ;QACvBC,KAAK,EAACZ,IAAI,CAACY,KAAK;QAChBC,YAAY,EAAEb,IAAI,CAACa,YAAY;QAC/BhB;MACJ;IACJ,CAAC,CAAC;IAEFiB,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAAClB,QAAQ,CAAC,CAAC,CAACmB,IAAI,CAACC,SAAS,CAAC,CAAC;EACvE,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEF,KAAK,CAACG,OAAO,CAAC;EACvD;AACJ,CAAC;AAED,OAAO,MAAMI,cAAc,GAAI/B,EAAE,IAAK,CAACE,QAAQ,EAACC,QAAQ,KAAI;EACxD,IAAI;IACAD,QAAQ,CAAC;MACLO,IAAI,EAAEZ,WAAW,CAACmC,gBAAgB;MAClCrB,OAAO,EAAEX;IACb,CAAC,CAAC;IAEFkB,YAAY,CAACC,OAAO,CAAC,MAAM,EAACC,IAAI,CAACC,SAAS,CAAClB,QAAQ,CAAC,CAAC,CAACmB,IAAI,CAACC,SAAS,CAAC,CAAC;EAC1E,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEF,KAAK,CAAC;EACnD;AAEJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}